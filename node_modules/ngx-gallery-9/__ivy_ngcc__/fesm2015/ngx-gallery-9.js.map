{"version":3,"file":"ngx-gallery-9.js","sources":["ng:/ngx-gallery-9/lib/ngx-gallery-helper.service.ts","ng:/ngx-gallery-9/lib/ngx-gallery-animation.model.ts","ng:/ngx-gallery-9/lib/ngx-gallery-image-size.model.ts","ng:/ngx-gallery-9/lib/ngx-gallery-layout.model.ts","ng:/ngx-gallery-9/lib/ngx-gallery-order.model.ts","ng:/ngx-gallery-9/lib/ngx-gallery-action.model.ts","ng:/ngx-gallery-9/lib/ngx-gallery-options.ts","ng:/ngx-gallery-9/lib/ngx-gallery-ordered-image.model.ts","ng:/ngx-gallery-9/lib/ngx-gallery-preview/ngx-gallery-preview.component.ts","ng:/ngx-gallery-9/lib/ngx-gallery-image/ngx-gallery-image.component.ts","ng:/ngx-gallery-9/lib/ngx-gallery-thumbnails/ngx-gallery-thumbnails.component.ts","ng:/ngx-gallery-9/lib/ngx-gallery.component.ts","ng:/ngx-gallery-9/lib/ngx-gallery-action/ngx-gallery-action.component.ts","ng:/ngx-gallery-9/lib/ngx-gallery-arrows/ngx-gallery-arrows.component.ts","ng:/ngx-gallery-9/lib/ngx-gallery-bullets/ngx-gallery-bullets.component.ts","ng:/ngx-gallery-9/lib/ngx-gallery.module.ts","ng:/ngx-gallery-9/lib/ngx-gallery-image.model.ts","ng:/ngx-gallery-9/public-api.ts","ng:/ngx-gallery-9/ngx-gallery-9.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Renderer2, ElementRef } from '@angular/core';\n\n@Injectable()\nexport class NgxGalleryHelperService {\n  private swipeHandlers: Map<string, Function[]> = new Map<string, Function[]>();\n\n  constructor(private renderer: Renderer2) {}\n\n  manageSwipe(status: boolean, element: ElementRef, id: string, nextHandler: Function, prevHandler: Function): void {\n\n      const handlers = this.getSwipeHandlers(id);\n\n      // swipeleft and swiperight are available only if hammerjs is included\n      try {\n          if (status && !handlers) {\n              this.swipeHandlers.set(id, [\n                  this.renderer.listen(element.nativeElement, 'swipeleft', () => nextHandler()),\n                  this.renderer.listen(element.nativeElement, 'swiperight', () => prevHandler())\n              ]);\n          } else if (!status && handlers) {\n              handlers.map((handler) => handler());\n              this.removeSwipeHandlers(id);\n          }\n      } catch (e) {}\n  }\n\n  validateUrl(url: string): string {\n      if (url.replace) {\n          return url.replace(new RegExp(' ', 'g'), '%20')\n              .replace(new RegExp('\\'', 'g'), '%27');\n      } else {\n          return url;\n      }\n  }\n\n  getBackgroundUrl(image: string) {\n      return 'url(\\'' + this.validateUrl(image) + '\\')';\n  }\n\n  private getSwipeHandlers(id: string): Function[] | undefined {\n      return this.swipeHandlers.get(id);\n  }\n\n  private removeSwipeHandlers(id: string): void {\n      this.swipeHandlers.delete(id);\n  }\n}\n","export class NgxGalleryAnimation {\r\n    static Fade = 'fade';\r\n    static Slide = 'slide';\r\n    static Rotate = 'rotate';\r\n    static Zoom = 'zoom';\r\n}\r\n","export class NgxGalleryImageSize {\r\n    static Cover = 'cover';\r\n    static Contain = 'contain';\r\n}\r\n","export class NgxGalleryLayout {\r\n    static ThumbnailsTop = 'thumbnails-top';\r\n    static ThumbnailsBottom = 'thumbnails-bottom';\r\n}\r\n","export class NgxGalleryOrder {\r\n    static Column = 1;\r\n    static Row = 2;\r\n    static Page = 3;\r\n}\r\n","export interface INgxGalleryAction {\r\n    icon: string;\r\n    disabled?: boolean;\r\n    titleText?: string;\r\n\r\n    onClick: (event: Event, index: number) => void;\r\n}\r\n\r\nexport class NgxGalleryAction implements INgxGalleryAction {\r\n    icon: string;\r\n    disabled?: boolean;\r\n    titleText?: string;\r\n\r\n    onClick: (event: Event, index: number) => void;\r\n\r\n    constructor(action: INgxGalleryAction) {\r\n        this.icon = action.icon;\r\n        this.disabled = action.disabled ? action.disabled : false;\r\n        this.titleText = action.titleText ? action.titleText : '';\r\n\r\n        this.onClick = action.onClick;\r\n    }\r\n}\r\n","import { NgxGalleryAnimation } from './ngx-gallery-animation.model';\r\nimport { NgxGalleryImageSize } from './ngx-gallery-image-size.model';\r\nimport { NgxGalleryLayout } from './ngx-gallery-layout.model';\r\nimport { NgxGalleryOrder } from './ngx-gallery-order.model';\r\nimport { NgxGalleryAction } from './ngx-gallery-action.model';\r\n\r\nexport interface INgxGalleryOptions {\r\n    width?: string;\r\n    height?: string;\r\n    breakpoint?: number;\r\n    fullWidth?: boolean;\r\n    layout?: string;\r\n    startIndex?: number;\r\n    linkTarget?: string;\r\n    lazyLoading?: boolean;\r\n    image?: boolean;\r\n    imagePercent?: number;\r\n    imageArrows?: boolean;\r\n    imageArrowsAutoHide?: boolean;\r\n    imageSwipe?: boolean;\r\n    imageAnimation?: string;\r\n    imageSize?: string;\r\n    imageAutoPlay?: boolean;\r\n    imageAutoPlayInterval?: number;\r\n    imageAutoPlayPauseOnHover?: boolean;\r\n    imageInfinityMove?: boolean;\r\n    imageActions?: NgxGalleryAction[];\r\n    imageDescription?: boolean;\r\n    imageBullets?: boolean;\r\n    thumbnails?: boolean;\r\n    thumbnailsColumns?: number;\r\n    thumbnailsRows?: number;\r\n    thumbnailsPercent?: number;\r\n    thumbnailsMargin?: number;\r\n    thumbnailsArrows?: boolean;\r\n    thumbnailsArrowsAutoHide?: boolean;\r\n    thumbnailsSwipe?: boolean;\r\n    thumbnailsMoveSize?: number;\r\n    thumbnailsOrder?: NgxGalleryOrder;\r\n    thumbnailsRemainingCount?: boolean;\r\n    thumbnailsAsLinks?: boolean;\r\n    thumbnailsAutoHide?: boolean;\r\n    thumbnailMargin?: number;\r\n    thumbnailSize?: string;\r\n    thumbnailActions?: NgxGalleryAction[];\r\n    preview?: boolean;\r\n    previewDescription?: boolean;\r\n    previewArrows?: boolean;\r\n    previewArrowsAutoHide?: boolean;\r\n    previewSwipe?: boolean;\r\n    previewFullscreen?: boolean;\r\n    previewForceFullscreen?: boolean;\r\n    previewCloseOnClick?: boolean;\r\n    previewCloseOnEsc?: boolean;\r\n    previewKeyboardNavigation?: boolean;\r\n    previewAnimation?: boolean;\r\n    previewAutoPlay?: boolean;\r\n    previewAutoPlayInterval?: number;\r\n    previewAutoPlayPauseOnHover?: boolean;\r\n    previewInfinityMove?: boolean;\r\n    previewZoom?: boolean;\r\n    previewZoomStep?: number;\r\n    previewZoomMax?: number;\r\n    previewZoomMin?: number;\r\n    previewRotate?: boolean;\r\n    previewDownload?: boolean;\r\n    previewCustom?: (index: number) => void;\r\n    previewBullets?: boolean;\r\n    arrowPrevIcon?: string;\r\n    arrowNextIcon?: string;\r\n    closeIcon?: string;\r\n    fullscreenIcon?: string;\r\n    spinnerIcon?: string;\r\n    zoomInIcon?: string;\r\n    zoomOutIcon?: string;\r\n    rotateLeftIcon?: string;\r\n    rotateRightIcon?: string;\r\n    downloadIcon?: string;\r\n    actions?: NgxGalleryAction[];\r\n}\r\n\r\nexport class NgxGalleryOptions implements INgxGalleryOptions {\r\n    width?: string;\r\n    height?: string;\r\n    breakpoint?: number;\r\n    fullWidth?: boolean;\r\n    layout?: string;\r\n    startIndex?: number;\r\n    linkTarget?: string;\r\n    lazyLoading?: boolean;\r\n    image?: boolean;\r\n    imagePercent?: number;\r\n    imageArrows?: boolean;\r\n    imageArrowsAutoHide?: boolean;\r\n    imageSwipe?: boolean;\r\n    imageAnimation?: string;\r\n    imageSize?: string;\r\n    imageAutoPlay?: boolean;\r\n    imageAutoPlayInterval?: number;\r\n    imageAutoPlayPauseOnHover?: boolean;\r\n    imageInfinityMove?: boolean;\r\n    imageActions?: NgxGalleryAction[];\r\n    imageDescription?: boolean;\r\n    imageBullets?: boolean;\r\n    thumbnails?: boolean;\r\n    thumbnailsColumns?: number;\r\n    thumbnailsRows?: number;\r\n    thumbnailsPercent?: number;\r\n    thumbnailsMargin?: number;\r\n    thumbnailsArrows?: boolean;\r\n    thumbnailsArrowsAutoHide?: boolean;\r\n    thumbnailsSwipe?: boolean;\r\n    thumbnailsMoveSize?: number;\r\n    thumbnailsOrder?: NgxGalleryOrder;\r\n    thumbnailsRemainingCount?: boolean;\r\n    thumbnailsAsLinks?: boolean;\r\n    thumbnailsAutoHide?: boolean;\r\n    thumbnailMargin?: number;\r\n    thumbnailSize?: string;\r\n    thumbnailActions?: NgxGalleryAction[];\r\n    preview?: boolean;\r\n    previewDescription?: boolean;\r\n    previewArrows?: boolean;\r\n    previewArrowsAutoHide?: boolean;\r\n    previewSwipe?: boolean;\r\n    previewFullscreen?: boolean;\r\n    previewForceFullscreen?: boolean;\r\n    previewCloseOnClick?: boolean;\r\n    previewCloseOnEsc?: boolean;\r\n    previewKeyboardNavigation?: boolean;\r\n    previewAnimation?: boolean;\r\n    previewAutoPlay?: boolean;\r\n    previewAutoPlayInterval?: number;\r\n    previewAutoPlayPauseOnHover?: boolean;\r\n    previewInfinityMove?: boolean;\r\n    previewZoom?: boolean;\r\n    previewZoomStep?: number;\r\n    previewZoomMax?: number;\r\n    previewZoomMin?: number;\r\n    previewRotate?: boolean;\r\n    previewDownload?: boolean;\r\n    previewCustom?: (index: number) => void;\r\n    previewBullets?: boolean;\r\n    arrowPrevIcon?: string;\r\n    arrowNextIcon?: string;\r\n    closeIcon?: string;\r\n    fullscreenIcon?: string;\r\n    spinnerIcon?: string;\r\n    zoomInIcon?: string;\r\n    zoomOutIcon?: string;\r\n    rotateLeftIcon?: string;\r\n    rotateRightIcon?: string;\r\n    downloadIcon?: string;\r\n    actions?: NgxGalleryAction[];\r\n\r\n    constructor(obj: INgxGalleryOptions) {\r\n\r\n        const preventDefaults = obj.breakpoint === undefined ? false : true;\r\n\r\n        function use<T>(source: T, defaultValue: T): T {\r\n            return obj && (source !== undefined || preventDefaults) ? source : defaultValue;\r\n        }\r\n\r\n        this.breakpoint = use(obj.breakpoint, undefined);\r\n        this.width = use(obj.width, '500px');\r\n        this.height = use(obj.height, '400px');\r\n        this.fullWidth = use(obj.fullWidth, false);\r\n        this.layout = use(obj.layout, NgxGalleryLayout.ThumbnailsBottom);\r\n        this.startIndex = use(obj.startIndex, 0);\r\n        this.linkTarget = use(obj.linkTarget, '_blank');\r\n        this.lazyLoading = use(obj.lazyLoading, true);\r\n\r\n        this.image = use(obj.image, true);\r\n        this.imagePercent = use(obj.imagePercent, 75);\r\n        this.imageArrows = use(obj.imageArrows, true);\r\n        this.imageArrowsAutoHide = use(obj.imageArrowsAutoHide, false);\r\n        this.imageSwipe = use(obj.imageSwipe, false);\r\n        this.imageAnimation = use(obj.imageAnimation, NgxGalleryAnimation.Fade);\r\n        this.imageSize = use(obj.imageSize, NgxGalleryImageSize.Cover);\r\n        this.imageAutoPlay = use(obj.imageAutoPlay, false);\r\n        this.imageAutoPlayInterval = use(obj.imageAutoPlayInterval, 2000);\r\n        this.imageAutoPlayPauseOnHover = use(obj.imageAutoPlayPauseOnHover, false);\r\n        this.imageInfinityMove = use(obj.imageInfinityMove, false);\r\n        if (obj && obj.imageActions && obj.imageActions.length) {\r\n            obj.imageActions = obj.imageActions.map(action => new NgxGalleryAction(action));\r\n        }\r\n        this.imageActions = use(obj.imageActions, []);\r\n        this.imageDescription = use(obj.imageDescription, false);\r\n        this.imageBullets = use(obj.imageBullets, false);\r\n\r\n        this.thumbnails = use(obj.thumbnails, true);\r\n        this.thumbnailsColumns = use(obj.thumbnailsColumns, 4);\r\n        this.thumbnailsRows = use(obj.thumbnailsRows, 1);\r\n        this.thumbnailsPercent = use(obj.thumbnailsPercent, 25);\r\n        this.thumbnailsMargin = use(obj.thumbnailsMargin, 10);\r\n        this.thumbnailsArrows = use(obj.thumbnailsArrows, true);\r\n        this.thumbnailsArrowsAutoHide = use(obj.thumbnailsArrowsAutoHide, false);\r\n        this.thumbnailsSwipe = use(obj.thumbnailsSwipe, false);\r\n        this.thumbnailsMoveSize = use(obj.thumbnailsMoveSize, 1);\r\n        this.thumbnailsOrder = use(obj.thumbnailsOrder, NgxGalleryOrder.Column);\r\n        this.thumbnailsRemainingCount = use(obj.thumbnailsRemainingCount, false);\r\n        this.thumbnailsAsLinks = use(obj.thumbnailsAsLinks, false);\r\n        this.thumbnailsAutoHide = use(obj.thumbnailsAutoHide, false);\r\n        this.thumbnailMargin = use(obj.thumbnailMargin, 10);\r\n        this.thumbnailSize = use(obj.thumbnailSize, NgxGalleryImageSize.Cover);\r\n        if (obj && obj.thumbnailActions && obj.thumbnailActions.length) {\r\n            obj.thumbnailActions = obj.thumbnailActions.map(action => new NgxGalleryAction(action));\r\n        }\r\n        this.thumbnailActions = use(obj.thumbnailActions, []);\r\n\r\n        this.preview = use(obj.preview, true);\r\n        this.previewDescription = use(obj.previewDescription, true);\r\n        this.previewArrows = use(obj.previewArrows, true);\r\n        this.previewArrowsAutoHide = use(obj.previewArrowsAutoHide, false);\r\n        this.previewSwipe = use(obj.previewSwipe, false);\r\n        this.previewFullscreen = use(obj.previewFullscreen, false);\r\n        this.previewForceFullscreen = use(obj.previewForceFullscreen, false);\r\n        this.previewCloseOnClick = use(obj.previewCloseOnClick, false);\r\n        this.previewCloseOnEsc = use(obj.previewCloseOnEsc, false);\r\n        this.previewKeyboardNavigation = use(obj.previewKeyboardNavigation, false);\r\n        this.previewAnimation = use(obj.previewAnimation, true);\r\n        this.previewAutoPlay = use(obj.previewAutoPlay, false);\r\n        this.previewAutoPlayInterval = use(obj.previewAutoPlayInterval, 2000);\r\n        this.previewAutoPlayPauseOnHover = use(obj.previewAutoPlayPauseOnHover, false);\r\n        this.previewInfinityMove = use(obj.previewInfinityMove, false);\r\n        this.previewZoom = use(obj.previewZoom, false);\r\n        this.previewZoomStep = use(obj.previewZoomStep, 0.1);\r\n        this.previewZoomMax = use(obj.previewZoomMax, 2);\r\n        this.previewZoomMin = use(obj.previewZoomMin, 0.5);\r\n        this.previewRotate = use(obj.previewRotate, false);\r\n        this.previewDownload = use(obj.previewDownload, false);\r\n        this.previewCustom = use(obj.previewCustom, undefined);\r\n        this.previewBullets = use(obj.previewBullets, false);\r\n\r\n        this.arrowPrevIcon = use(obj.arrowPrevIcon, 'fa fa-arrow-circle-left');\r\n        this.arrowNextIcon = use(obj.arrowNextIcon, 'fa fa-arrow-circle-right');\r\n        this.closeIcon = use(obj.closeIcon, 'fa fa-times-circle');\r\n        this.fullscreenIcon = use(obj.fullscreenIcon, 'fa fa-arrows-alt');\r\n        this.spinnerIcon = use(obj.spinnerIcon, 'fa fa-spinner fa-pulse fa-3x fa-fw');\r\n        this.zoomInIcon = use(obj.zoomInIcon, 'fa fa-search-plus');\r\n        this.zoomOutIcon = use(obj.zoomOutIcon, 'fa fa-search-minus');\r\n        this.rotateLeftIcon = use(obj.rotateLeftIcon, 'fa fa-undo');\r\n        this.rotateRightIcon = use(obj.rotateRightIcon, 'fa fa-repeat');\r\n        this.downloadIcon = use(obj.downloadIcon, 'fa fa-arrow-circle-down');\r\n\r\n        if (obj && obj.actions && obj.actions.length) {\r\n            obj.actions = obj.actions.map(action => new NgxGalleryAction(action));\r\n        }\r\n        this.actions = use(obj.actions, []);\r\n    }\r\n}\r\n","import { SafeResourceUrl } from '@angular/platform-browser';\r\n\r\nexport interface INgxGalleryOrderedImage {\r\n    src: string | SafeResourceUrl;\r\n    index: number;\r\n}\r\n\r\nexport class NgxGalleryOrderedImage implements INgxGalleryOrderedImage {\r\n    src: string | SafeResourceUrl;\r\n    index: number;\r\n\r\n    constructor(obj: INgxGalleryOrderedImage) {\r\n        this.src = obj.src;\r\n        this.index = obj.index;\r\n    }\r\n}\r\n","import { Component, OnInit, Input, OnChanges, Output, EventEmitter, ViewChild, ElementRef, ChangeDetectorRef, SimpleChanges, HostListener, Renderer2 } from '@angular/core';\nimport { SafeResourceUrl, SafeUrl, DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { NgxGalleryAction } from '../ngx-gallery-action.model';\nimport { NgxGalleryHelperService } from '../ngx-gallery-helper.service';\n\n@Component({\n  selector: 'ngx-gallery-preview',\n  templateUrl: './ngx-gallery-preview.component.html',\n  styleUrls: ['./ngx-gallery-preview.component.scss']\n})\nexport class NgxGalleryPreviewComponent implements OnInit, OnChanges {\n\n  src: SafeUrl;\n  srcIndex: number;\n  description: string;\n  showSpinner = false;\n  positionLeft = 0;\n  positionTop = 0;\n  zoomValue = 1;\n  loading = false;\n  rotateValue = 0;\n  index = 0;\n\n  @Input() images: string[] | SafeResourceUrl[];\n  @Input() descriptions: string[];\n  @Input() showDescription: boolean;\n  @Input() arrows: boolean;\n  @Input() arrowsAutoHide: boolean;\n  @Input() swipe: boolean;\n  @Input() fullscreen: boolean;\n  @Input() forceFullscreen: boolean;\n  @Input() closeOnClick: boolean;\n  @Input() closeOnEsc: boolean;\n  @Input() keyboardNavigation: boolean;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n  @Input() closeIcon: string;\n  @Input() fullscreenIcon: string;\n  @Input() spinnerIcon: string;\n  @Input() autoPlay: boolean;\n  @Input() autoPlayInterval: number;\n  @Input() autoPlayPauseOnHover: boolean;\n  @Input() infinityMove: boolean;\n  @Input() zoom: boolean;\n  @Input() zoomStep: number;\n  @Input() zoomMax: number;\n  @Input() zoomMin: number;\n  @Input() zoomInIcon: string;\n  @Input() zoomOutIcon: string;\n  @Input() animation: boolean;\n  @Input() actions: NgxGalleryAction[];\n  @Input() rotate: boolean;\n  @Input() rotateLeftIcon: string;\n  @Input() rotateRightIcon: string;\n  @Input() download: boolean;\n  @Input() downloadIcon: string;\n  @Input() bullets: string;\n\n  @Output() onOpen = new EventEmitter();\n  @Output() onClose = new EventEmitter();\n  @Output() onActiveChange = new EventEmitter<number>();\n\n  @ViewChild('previewImage') previewImage: ElementRef;\n\n  private isOpen = false;\n  private timer;\n  private initialX = 0;\n  private initialY = 0;\n  private initialLeft = 0;\n  private initialTop = 0;\n  private isMove = false;\n\n  private keyDownListener: Function;\n\n  constructor(private sanitization: DomSanitizer, private elementRef: ElementRef,\n      private helperService: NgxGalleryHelperService, private renderer: Renderer2,\n      private changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n      if (this.arrows && this.arrowsAutoHide) {\n          this.arrows = false;\n      }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n      if (changes['swipe']) {\n          this.helperService.manageSwipe(this.swipe, this.elementRef,\n          'preview', () => this.showNext(), () => this.showPrev());\n      }\n  }\n\n  ngOnDestroy() {\n      if (this.keyDownListener) {\n          this.keyDownListener();\n      }\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n      if (this.arrowsAutoHide && !this.arrows) {\n          this.arrows = true;\n      }\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n      if (this.arrowsAutoHide && this.arrows) {\n          this.arrows = false;\n      }\n  }\n\n  onKeyDown(e) {\n      if (this.isOpen) {\n          if (this.keyboardNavigation) {\n              if (this.isKeyboardPrev(e)) {\n                  this.showPrev();\n              } else if (this.isKeyboardNext(e)) {\n                  this.showNext();\n              }\n          }\n          if (this.closeOnEsc && this.isKeyboardEsc(e)) {\n              this.close();\n          }\n      }\n  }\n\n  open(index: number): void {\n      this.onOpen.emit();\n\n      this.index = index;\n      this.isOpen = true;\n      this.show(true);\n\n      if (this.forceFullscreen) {\n          this.manageFullscreen();\n      }\n\n      this.keyDownListener = this.renderer.listen(\"window\", \"keydown\", (e) => this.onKeyDown(e));\n  }\n\n  close(): void {\n      this.isOpen = false;\n      this.closeFullscreen();\n      this.onClose.emit();\n\n      this.stopAutoPlay();\n\n      if (this.keyDownListener) {\n          this.keyDownListener();\n      }\n  }\n\n  imageMouseEnter(): void {\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n          this.stopAutoPlay();\n      }\n  }\n\n  imageMouseLeave(): void {\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n          this.startAutoPlay();\n      }\n  }\n\n  startAutoPlay(): void {\n      if (this.autoPlay) {\n          this.stopAutoPlay();\n\n          this.timer = setTimeout(() => {\n              if (!this.showNext()) {\n                  this.index = -1;\n                  this.showNext();\n              }\n          }, this.autoPlayInterval);\n      }\n  }\n\n  stopAutoPlay(): void {\n      if (this.timer) {\n          clearTimeout(this.timer);\n      }\n  }\n\n  showAtIndex(index: number): void {\n      this.index = index;\n      this.show();\n  }\n\n  showNext(): boolean {\n      if (this.canShowNext()) {\n          this.index++;\n\n          if (this.index === this.images.length) {\n              this.index = 0;\n          }\n\n          this.show();\n          return true;\n      } else {\n          return false;\n      }\n  }\n\n  showPrev(): void {\n      if (this.canShowPrev()) {\n          this.index--;\n\n          if (this.index < 0) {\n              this.index = this.images.length - 1;\n          }\n\n          this.show();\n      }\n  }\n\n  canShowNext(): boolean {\n      if (this.loading) {\n          return false;\n      } else if (this.images) {\n          return this.infinityMove || this.index < this.images.length - 1 ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  canShowPrev(): boolean {\n      if (this.loading) {\n          return false;\n      } else if (this.images) {\n          return this.infinityMove || this.index > 0 ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  manageFullscreen(): void {\n      if (this.fullscreen || this.forceFullscreen) {\n          const doc = <any>document;\n\n          if (!doc.fullscreenElement && !doc.mozFullScreenElement\n              && !doc.webkitFullscreenElement && !doc.msFullscreenElement) {\n              this.openFullscreen();\n          } else {\n              this.closeFullscreen();\n          }\n      }\n  }\n\n  getSafeUrl(image: string): SafeUrl {\n      return image.substr(0, 10) === 'data:image' ?\n          image : this.sanitization.bypassSecurityTrustUrl(image);\n  }\n\n  zoomIn(): void {\n      if (this.canZoomIn()) {\n          this.zoomValue += this.zoomStep;\n\n          if (this.zoomValue > this.zoomMax) {\n              this.zoomValue = this.zoomMax;\n          }\n      }\n  }\n\n  zoomOut(): void {\n      if (this.canZoomOut()) {\n          this.zoomValue -= this.zoomStep;\n\n          if (this.zoomValue < this.zoomMin) {\n              this.zoomValue = this.zoomMin;\n          }\n\n          if (this.zoomValue <= 1) {\n              this.resetPosition()\n          }\n      }\n  }\n\n  rotateLeft(): void {\n      this.rotateValue -= 90;\n  }\n\n  rotateRight(): void {\n      this.rotateValue += 90;\n  }\n\n  getTransform(): SafeStyle {\n      return this.sanitization.bypassSecurityTrustStyle('scale(' + this.zoomValue + ') rotate(' + this.rotateValue + 'deg)');\n  }\n\n  canZoomIn(): boolean {\n      return this.zoomValue < this.zoomMax ? true : false;\n  }\n\n  canZoomOut(): boolean {\n      return this.zoomValue > this.zoomMin ? true : false;\n  }\n\n  canDragOnZoom() {\n      return this.zoom && this.zoomValue > 1;\n  }\n\n  mouseDownHandler(e): void {\n      if (this.canDragOnZoom()) {\n          this.initialX = this.getClientX(e);\n          this.initialY = this.getClientY(e);\n          this.initialLeft = this.positionLeft;\n          this.initialTop = this.positionTop;\n          this.isMove = true;\n\n          e.preventDefault();\n      }\n  }\n\n  mouseUpHandler(e): void {\n      this.isMove = false;\n  }\n\n  mouseMoveHandler(e) {\n      if (this.isMove) {\n          this.positionLeft = this.initialLeft + (this.getClientX(e) - this.initialX);\n          this.positionTop = this.initialTop + (this.getClientY(e) - this.initialY);\n      }\n  }\n\n  private getClientX(e): number {\n      return e.touches && e.touches.length ? e.touches[0].clientX : e.clientX;\n  }\n\n  private getClientY(e): number {\n      return e.touches && e.touches.length ? e.touches[0].clientY : e.clientY;\n  }\n\n  private resetPosition() {\n      if (this.zoom) {\n          this.positionLeft = 0;\n          this.positionTop = 0;\n      }\n  }\n\n  private isKeyboardNext(e): boolean {\n      return e.keyCode === 39 ? true : false;\n  }\n\n  private isKeyboardPrev(e): boolean {\n      return e.keyCode === 37 ? true : false;\n  }\n\n  private isKeyboardEsc(e): boolean {\n      return e.keyCode === 27 ? true : false;\n  }\n\n  private openFullscreen(): void {\n      const element = <any>document.documentElement;\n\n      if (element.requestFullscreen) {\n          element.requestFullscreen();\n      } else if (element.msRequestFullscreen) {\n          element.msRequestFullscreen();\n      } else if (element.mozRequestFullScreen) {\n          element.mozRequestFullScreen();\n      } else if (element.webkitRequestFullscreen) {\n          element.webkitRequestFullscreen();\n      }\n  }\n\n  private closeFullscreen(): void {\n      if (this.isFullscreen()) {\n          const doc = <any>document;\n\n          if (doc.exitFullscreen) {\n              doc.exitFullscreen();\n          } else if (doc.msExitFullscreen) {\n              doc.msExitFullscreen();\n          } else if (doc.mozCancelFullScreen) {\n              doc.mozCancelFullScreen();\n          } else if (doc.webkitExitFullscreen) {\n              doc.webkitExitFullscreen();\n          }\n      }\n  }\n\n  private isFullscreen() {\n      const doc = <any>document;\n\n      return doc.fullscreenElement || doc.webkitFullscreenElement\n          || doc.mozFullScreenElement || doc.msFullscreenElement;\n  }\n\n\n\n  private show(first = false) {\n      this.loading = true;\n      this.stopAutoPlay();\n\n      this.onActiveChange.emit(this.index);\n\n      if (first || !this.animation) {\n          this._show();\n      } else {\n          setTimeout(() => this._show(), 600);\n      }\n  }\n\n  private _show() {\n      this.zoomValue = 1;\n      this.rotateValue = 0;\n      this.resetPosition();\n\n      this.src = this.getSafeUrl(<string>this.images[this.index]);\n      this.srcIndex = this.index;\n      this.description = this.descriptions[this.index];\n      this.changeDetectorRef.markForCheck();\n\n      setTimeout(() => {\n          if (this.isLoaded(this.previewImage.nativeElement)) {\n              this.loading = false;\n              this.startAutoPlay();\n              this.changeDetectorRef.markForCheck();\n          } else {\n              setTimeout(() => {\n                  if (this.loading) {\n                      this.showSpinner = true;\n                      this.changeDetectorRef.markForCheck();\n                  }\n              })\n\n              this.previewImage.nativeElement.onload = () => {\n                  this.loading = false;\n                  this.showSpinner = false;\n                  this.previewImage.nativeElement.onload = null;\n                  this.startAutoPlay();\n                  this.changeDetectorRef.markForCheck();\n              }\n          }\n      })\n  }\n\n  private isLoaded(img): boolean {\n      if (!img.complete) {\n          return false;\n      }\n\n      if (typeof img.naturalWidth !== 'undefined' && img.naturalWidth === 0) {\n          return false;\n      }\n\n      return true;\n  }\n\n}","import { Component, OnInit, OnChanges, Input, Output, EventEmitter, ElementRef, SimpleChanges, HostListener } from '@angular/core';\nimport { NgxGalleryOrderedImage } from '../ngx-gallery-ordered-image.model';\nimport { NgxGalleryAction } from '../ngx-gallery-action.model';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { NgxGalleryHelperService } from '../ngx-gallery-helper.service';\nimport { NgxGalleryAnimation } from '../ngx-gallery-animation.model';\n\n@Component({\n  selector: 'ngx-gallery-image',\n  templateUrl: './ngx-gallery-image.component.html',\n  styleUrls: ['./ngx-gallery-image.component.scss']\n})\nexport class NgxGalleryImageComponent implements OnInit, OnChanges {\n  @Input() images: NgxGalleryOrderedImage[];\n  @Input() clickable: boolean;\n  @Input() selectedIndex: number;\n  @Input() arrows: boolean;\n  @Input() arrowsAutoHide: boolean;\n  @Input() swipe: boolean;\n  @Input() animation: string;\n  @Input() size: string;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n  @Input() autoPlay: boolean;\n  @Input() autoPlayInterval: number;\n  @Input() autoPlayPauseOnHover: boolean;\n  @Input() infinityMove: boolean;\n  @Input() lazyLoading: boolean;\n  @Input() actions: NgxGalleryAction[];\n  @Input() descriptions: string[];\n  @Input() showDescription: boolean;\n  @Input() bullets: boolean;\n\n  @Output() onClick = new EventEmitter();\n  @Output() onActiveChange = new EventEmitter();\n\n  canChangeImage = true;\n\n  private timer;\n\n  constructor(private sanitization: DomSanitizer,\n      private elementRef: ElementRef, private helperService: NgxGalleryHelperService) {}\n\n  ngOnInit(): void {\n      if (this.arrows && this.arrowsAutoHide) {\n          this.arrows = false;\n      }\n\n      if (this.autoPlay) {\n          this.startAutoPlay();\n      }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n      if (changes['swipe']) {\n          this.helperService.manageSwipe(this.swipe, this.elementRef, 'image', () => this.showNext(), () => this.showPrev());\n      }\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n      if (this.arrowsAutoHide && !this.arrows) {\n          this.arrows = true;\n      }\n\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n          this.stopAutoPlay();\n      }\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n      if (this.arrowsAutoHide && this.arrows) {\n          this.arrows = false;\n      }\n\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n          this.startAutoPlay();\n      }\n  }\n\n  reset(index: number): void {\n      this.selectedIndex = index;\n  }\n\n  getImages(): NgxGalleryOrderedImage[] {\n      if (!this.images) {\n          return [];\n      }\n\n      if (this.lazyLoading) {\n          let indexes = [this.selectedIndex];\n          let prevIndex = this.selectedIndex - 1;\n\n          if (prevIndex === -1 && this.infinityMove) {\n              indexes.push(this.images.length - 1)\n          } else if (prevIndex >= 0) {\n              indexes.push(prevIndex);\n          }\n\n          let nextIndex = this.selectedIndex + 1;\n\n          if (nextIndex == this.images.length && this.infinityMove) {\n              indexes.push(0);\n          } else if (nextIndex < this.images.length) {\n              indexes.push(nextIndex);\n          }\n\n          return this.images.filter((img, i) => indexes.indexOf(i) != -1);\n      } else {\n          return this.images;\n      }\n  }\n\n  startAutoPlay(): void {\n      this.stopAutoPlay();\n\n      this.timer = setInterval(() => {\n          if (!this.showNext()) {\n              this.selectedIndex = -1;\n              this.showNext();\n          }\n      }, this.autoPlayInterval);\n  }\n\n  stopAutoPlay() {\n      if (this.timer) {\n          clearInterval(this.timer);\n      }\n  }\n\n  handleClick(event: Event, index: number): void {\n      if (this.clickable) {\n          this.onClick.emit(index);\n\n          event.stopPropagation();\n          event.preventDefault();\n      }\n  }\n\n  show(index: number) {\n      this.selectedIndex = index;\n      this.onActiveChange.emit(this.selectedIndex);\n      this.setChangeTimeout();\n  }\n\n  showNext(): boolean {\n      if (this.canShowNext() && this.canChangeImage) {\n          this.selectedIndex++;\n\n          if (this.selectedIndex === this.images.length) {\n              this.selectedIndex = 0;\n          }\n\n          this.onActiveChange.emit(this.selectedIndex);\n          this.setChangeTimeout();\n\n          return true;\n      } else {\n          return false;\n      }\n  }\n\n  showPrev(): void {\n      if (this.canShowPrev() && this.canChangeImage) {\n          this.selectedIndex--;\n\n          if (this.selectedIndex < 0) {\n              this.selectedIndex = this.images.length - 1;\n          }\n\n          this.onActiveChange.emit(this.selectedIndex);\n          this.setChangeTimeout();\n      }\n  }\n\n  setChangeTimeout() {\n      this.canChangeImage = false;\n      let timeout = 1000;\n\n      if (this.animation === NgxGalleryAnimation.Slide\n          || this.animation === NgxGalleryAnimation.Fade) {\n              timeout = 500;\n      }\n\n      setTimeout(() => {\n          this.canChangeImage = true;\n      }, timeout);\n  }\n\n  canShowNext(): boolean {\n      if (this.images) {\n          return this.infinityMove || this.selectedIndex < this.images.length - 1\n              ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  canShowPrev(): boolean {\n      if (this.images) {\n          return this.infinityMove || this.selectedIndex > 0 ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  getSafeUrl(image: string): SafeStyle {\n      return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n  }\n}\n","import { Component, OnChanges, Input, Output, EventEmitter, ElementRef, SimpleChanges, HostListener } from '@angular/core';\nimport { SafeResourceUrl, DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { NgxGalleryAction } from '../ngx-gallery-action.model';\nimport { NgxGalleryHelperService } from '../ngx-gallery-helper.service';\nimport { NgxGalleryOrder } from '../ngx-gallery-order.model';\n\n@Component({\n  selector: 'ngx-gallery-thumbnails',\n  templateUrl: './ngx-gallery-thumbnails.component.html',\n  styleUrls: ['./ngx-gallery-thumbnails.component.scss']\n})\nexport class NgxGalleryThumbnailsComponent implements OnChanges {\n\n  thumbnailsLeft: string;\n  thumbnailsMarginLeft: string;\n  mouseenter: boolean;\n  remainingCountValue: number;\n\n  minStopIndex = 0;\n\n  @Input() images: string[] | SafeResourceUrl[];\n  @Input() links: string[];\n  @Input() labels: string[];\n  @Input() linkTarget: string;\n  @Input() columns: number;\n  @Input() rows: number;\n  @Input() arrows: boolean;\n  @Input() arrowsAutoHide: boolean;\n  @Input() margin: number;\n  @Input() selectedIndex: number;\n  @Input() clickable: boolean;\n  @Input() swipe: boolean;\n  @Input() size: string;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n  @Input() moveSize: number;\n  @Input() order: number;\n  @Input() remainingCount: boolean;\n  @Input() lazyLoading: boolean;\n  @Input() actions: NgxGalleryAction[];\n\n  @Output() onActiveChange = new EventEmitter();\n\n  private index = 0;\n\n  constructor(private sanitization: DomSanitizer, private elementRef: ElementRef,\n      private helperService: NgxGalleryHelperService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n      if (changes['selectedIndex']) {\n          this.validateIndex();\n      }\n\n      if (changes['swipe']) {\n          this.helperService.manageSwipe(this.swipe, this.elementRef,\n          'thumbnails', () => this.moveRight(), () => this.moveLeft());\n      }\n\n      if (this.images) {\n          this.remainingCountValue = this.images.length - (this.rows * this.columns);\n      }\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n      this.mouseenter = true;\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n      this.mouseenter = false;\n  }\n\n  reset(index: number): void {\n      this.selectedIndex = index;\n      this.setDefaultPosition();\n\n      this.index = 0;\n      this.validateIndex();\n  }\n\n  getImages(): string[] | SafeResourceUrl[] {\n      if (!this.images) {\n          return [];\n      }\n\n      if (this.remainingCount) {\n          return this.images.slice(0, this.rows * this.columns);\n      } \n      else if (this.lazyLoading && this.order != NgxGalleryOrder.Row) {\n          let stopIndex = 0;\n\n          if (this.order === NgxGalleryOrder.Column) {\n              stopIndex = (this.index + this.columns + this.moveSize) * this.rows;\n          }\n          else if (this.order === NgxGalleryOrder.Page) {\n              stopIndex = this.index + ((this.columns * this.rows) * 2);\n          }\n\n          if (stopIndex <= this.minStopIndex) {\n              stopIndex = this.minStopIndex;\n          } else {\n              this.minStopIndex = stopIndex;\n          }\n\n          return this.images.slice(0, stopIndex);\n      } \n      else {\n          return this.images;\n      }\n  }\n\n  handleClick(event: Event, index: number): void {\n      if (!this.hasLink(index)) {\n          this.selectedIndex = index;\n          this.onActiveChange.emit(index);\n\n          event.stopPropagation();\n          event.preventDefault();\n      }\n  }\n\n  hasLink(index: number): boolean {\n      if (this.links && this.links.length && this.links[index]) return true;\n  }\n\n  moveRight(): void {\n      if (this.canMoveRight()) {\n          this.index += this.moveSize;\n          let maxIndex = this.getMaxIndex() - this.columns;\n\n          if (this.index > maxIndex) {\n              this.index = maxIndex;\n          }\n\n          this.setThumbnailsPosition();\n      }\n  }\n\n  moveLeft(): void {\n      if (this.canMoveLeft()) {\n          this.index -= this.moveSize;\n\n          if (this.index < 0) {\n              this.index = 0;\n          }\n\n          this.setThumbnailsPosition();\n      }\n  }\n\n  canMoveRight(): boolean {\n      return this.index + this.columns < this.getMaxIndex() ? true : false;\n  }\n\n  canMoveLeft(): boolean {\n      return this.index !== 0 ? true : false;\n  }\n\n  getThumbnailLeft(index: number): SafeStyle {\n      let calculatedIndex;\n\n      if (this.order === NgxGalleryOrder.Column) {\n          calculatedIndex = Math.floor(index / this.rows);\n      }\n      else if (this.order === NgxGalleryOrder.Page) {\n          calculatedIndex = (index % this.columns) + (Math.floor(index / (this.rows * this.columns)) * this.columns);\n      }\n      else if (this.order == NgxGalleryOrder.Row && this.remainingCount) {\n          calculatedIndex = index % this.columns;\n      }\n      else {\n          calculatedIndex = index % Math.ceil(this.images.length / this.rows);\n      }\n\n      return this.getThumbnailPosition(calculatedIndex, this.columns);\n  }\n\n  getThumbnailTop(index: number): SafeStyle {\n      let calculatedIndex;\n\n      if (this.order === NgxGalleryOrder.Column) {\n          calculatedIndex = index % this.rows;\n      }\n      else if (this.order === NgxGalleryOrder.Page) {\n          calculatedIndex = Math.floor(index / this.columns) - (Math.floor(index / (this.rows * this.columns)) * this.rows);\n      }\n      else if (this.order == NgxGalleryOrder.Row && this.remainingCount) {\n          calculatedIndex = Math.floor(index / this.columns);\n      }\n      else {\n          calculatedIndex = Math.floor(index / Math.ceil(this.images.length / this.rows));\n      }\n\n      return this.getThumbnailPosition(calculatedIndex, this.rows);\n  }\n\n  getThumbnailWidth(): SafeStyle {\n      return this.getThumbnailDimension(this.columns);\n  }\n\n  getThumbnailHeight(): SafeStyle {\n      return this.getThumbnailDimension(this.rows);\n  }\n\n  setThumbnailsPosition(): void {\n      this.thumbnailsLeft = - ((100 / this.columns) * this.index) + '%'\n\n      this.thumbnailsMarginLeft = - ((this.margin - (((this.columns - 1)\n      * this.margin) / this.columns)) * this.index) + 'px';\n  }\n\n  setDefaultPosition(): void {\n      this.thumbnailsLeft = '0px';\n      this.thumbnailsMarginLeft = '0px';\n  }\n\n  canShowArrows(): boolean {\n      if (this.remainingCount) {\n          return false;\n      } else if (this.arrows && this.images && this.images.length > this.getVisibleCount()\n          && (!this.arrowsAutoHide || this.mouseenter)) {\n          return true;\n      } else {\n          return false;\n      }\n  }\n\n  validateIndex(): void {\n      if (this.images) {\n          let newIndex;\n\n          if (this.order === NgxGalleryOrder.Column) {\n              newIndex = Math.floor(this.selectedIndex / this.rows);\n          } else {\n              newIndex = this.selectedIndex % Math.ceil(this.images.length / this.rows);\n          }\n\n          if (this.remainingCount) {\n              newIndex = 0;\n          }\n\n          if (newIndex < this.index || newIndex >= this.index + this.columns) {\n              const maxIndex = this.getMaxIndex() - this.columns;\n              this.index = newIndex > maxIndex ? maxIndex : newIndex;\n\n              this.setThumbnailsPosition();\n          }\n      }\n  }\n\n  getSafeUrl(image: string): SafeStyle {\n      return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n  }\n\n  private getThumbnailPosition(index: number, count: number): SafeStyle {\n      return this.getSafeStyle('calc(' + ((100 / count) * index) + '% + '\n          + ((this.margin - (((count - 1) * this.margin) / count)) * index) + 'px)');\n  }\n\n  private getThumbnailDimension(count: number): SafeStyle {\n      if (this.margin !== 0) {\n          return this.getSafeStyle('calc(' + (100 / count) + '% - '\n              + (((count - 1) * this.margin) / count) + 'px)');\n      } else {\n          return this.getSafeStyle('calc(' + (100 / count) + '% + 1px)');\n      }\n  }\n\n  private getMaxIndex(): number {\n      if (this.order == NgxGalleryOrder.Page) {\n          let maxIndex = (Math.floor(this.images.length / this.getVisibleCount()) * this.columns);\n\n          if (this.images.length % this.getVisibleCount() > this.columns) {\n              maxIndex += this.columns;\n          }\n          else {\n              maxIndex += this.images.length % this.getVisibleCount();\n          }\n\n          return maxIndex;\n      }\n      else {\n          return Math.ceil(this.images.length / this.rows);\n      }\n  }\n\n  private getVisibleCount(): number {\n      return this.columns * this.rows;\n  }\n\n  private getSafeStyle(value: string): SafeStyle {\n      return this.sanitization.bypassSecurityTrustStyle(value);\n  }\n}\n","import { Component, OnInit, DoCheck, AfterViewInit, EventEmitter, Output, ViewChild, HostBinding, ElementRef, HostListener, Input } from '@angular/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\nimport { NgxGalleryHelperService } from './ngx-gallery-helper.service';\nimport { NgxGalleryOptions } from './ngx-gallery-options';\nimport { NgxGalleryImageSize } from './ngx-gallery-image-size.model';\nimport { NgxGalleryImage } from './ngx-gallery-image.model';\nimport { NgxGalleryOrderedImage } from './ngx-gallery-ordered-image.model';\nimport { NgxGalleryPreviewComponent } from './ngx-gallery-preview/ngx-gallery-preview.component';\nimport { NgxGalleryImageComponent } from './ngx-gallery-image/ngx-gallery-image.component';\nimport { NgxGalleryThumbnailsComponent } from './ngx-gallery-thumbnails/ngx-gallery-thumbnails.component';\nimport { NgxGalleryLayout } from './ngx-gallery-layout.model';\n\n@Component({\n  selector: 'ngx-gallery',\n  template: `\n    <div class=\"ngx-gallery-layout {{currentOptions?.layout}}\">\n      <ngx-gallery-image *ngIf=\"currentOptions?.image\" [style.height]=\"getImageHeight()\" [images]=\"mediumImages\" [clickable]=\"currentOptions?.preview\" [selectedIndex]=\"selectedIndex\" [arrows]=\"currentOptions?.imageArrows\" [arrowsAutoHide]=\"currentOptions?.imageArrowsAutoHide\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [swipe]=\"currentOptions?.imageSwipe\" [animation]=\"currentOptions?.imageAnimation\" [size]=\"currentOptions?.imageSize\" [autoPlay]=\"currentOptions?.imageAutoPlay\" [autoPlayInterval]=\"currentOptions?.imageAutoPlayInterval\" [autoPlayPauseOnHover]=\"currentOptions?.imageAutoPlayPauseOnHover\" [infinityMove]=\"currentOptions?.imageInfinityMove\"  [lazyLoading]=\"currentOptions?.lazyLoading\" [actions]=\"currentOptions?.imageActions\" [descriptions]=\"descriptions\" [showDescription]=\"currentOptions?.imageDescription\" [bullets]=\"currentOptions?.imageBullets\" (onClick)=\"openPreview($event)\" (onActiveChange)=\"selectFromImage($event)\"></ngx-gallery-image>\n\n      <ngx-gallery-thumbnails *ngIf=\"currentOptions?.thumbnails\" [style.marginTop]=\"getThumbnailsMarginTop()\" [style.marginBottom]=\"getThumbnailsMarginBottom()\" [style.height]=\"getThumbnailsHeight()\" [images]=\"smallImages\" [links]=\"currentOptions?.thumbnailsAsLinks ? links : []\" [labels]=\"labels\" [linkTarget]=\"currentOptions?.linkTarget\" [selectedIndex]=\"selectedIndex\" [columns]=\"currentOptions?.thumbnailsColumns\" [rows]=\"currentOptions?.thumbnailsRows\" [margin]=\"currentOptions?.thumbnailMargin\" [arrows]=\"currentOptions?.thumbnailsArrows\" [arrowsAutoHide]=\"currentOptions?.thumbnailsArrowsAutoHide\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [clickable]=\"currentOptions?.image || currentOptions?.preview\" [swipe]=\"currentOptions?.thumbnailsSwipe\" [size]=\"currentOptions?.thumbnailSize\" [moveSize]=\"currentOptions?.thumbnailsMoveSize\" [order]=\"currentOptions?.thumbnailsOrder\" [remainingCount]=\"currentOptions?.thumbnailsRemainingCount\" [lazyLoading]=\"currentOptions?.lazyLoading\" [actions]=\"currentOptions?.thumbnailActions\"  (onActiveChange)=\"selectFromThumbnails($event)\"></ngx-gallery-thumbnails>\n\n      <ngx-gallery-preview [images]=\"bigImages\" [descriptions]=\"descriptions\" [showDescription]=\"currentOptions?.previewDescription\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [closeIcon]=\"currentOptions?.closeIcon\" [fullscreenIcon]=\"currentOptions?.fullscreenIcon\" [spinnerIcon]=\"currentOptions?.spinnerIcon\" [arrows]=\"currentOptions?.previewArrows\" [arrowsAutoHide]=\"currentOptions?.previewArrowsAutoHide\" [swipe]=\"currentOptions?.previewSwipe\" [fullscreen]=\"currentOptions?.previewFullscreen\" [forceFullscreen]=\"currentOptions?.previewForceFullscreen\" [closeOnClick]=\"currentOptions?.previewCloseOnClick\" [closeOnEsc]=\"currentOptions?.previewCloseOnEsc\" [keyboardNavigation]=\"currentOptions?.previewKeyboardNavigation\" [animation]=\"currentOptions?.previewAnimation\" [autoPlay]=\"currentOptions?.previewAutoPlay\" [autoPlayInterval]=\"currentOptions?.previewAutoPlayInterval\" [autoPlayPauseOnHover]=\"currentOptions?.previewAutoPlayPauseOnHover\" [infinityMove]=\"currentOptions?.previewInfinityMove\" [zoom]=\"currentOptions?.previewZoom\" [zoomStep]=\"currentOptions?.previewZoomStep\" [zoomMax]=\"currentOptions?.previewZoomMax\" [zoomMin]=\"currentOptions?.previewZoomMin\" [zoomInIcon]=\"currentOptions?.zoomInIcon\" [zoomOutIcon]=\"currentOptions?.zoomOutIcon\" [actions]=\"currentOptions?.actions\" [rotate]=\"currentOptions?.previewRotate\" [rotateLeftIcon]=\"currentOptions?.rotateLeftIcon\" [rotateRightIcon]=\"currentOptions?.rotateRightIcon\" [download]=\"currentOptions?.previewDownload\" [downloadIcon]=\"currentOptions?.downloadIcon\" [bullets]=\"currentOptions?.previewBullets\" (onClose)=\"onPreviewClose()\" (onOpen)=\"onPreviewOpen()\" (onActiveChange)=\"previewSelect($event)\" [class.ngx-gallery-active]=\"previewEnabled\"></ngx-gallery-preview>\n    </div>\n  `,\n  styleUrls: ['./ngx-gallery.component.scss'],\n  providers: [NgxGalleryHelperService]\n})\nexport class NgxGalleryComponent implements OnInit, DoCheck, AfterViewInit {\n  @Input() options: NgxGalleryOptions[];\n  @Input() images: NgxGalleryImage[];\n\n  @Output() imagesReady = new EventEmitter();\n  @Output() change = new EventEmitter<{ index: number; image: NgxGalleryImage; }>();\n  @Output() previewOpen = new EventEmitter();\n  @Output() previewClose = new EventEmitter();\n  @Output() previewChange = new EventEmitter<{ index: number; image: NgxGalleryImage; }>();\n\n  smallImages: string[] | SafeResourceUrl[];\n  mediumImages: NgxGalleryOrderedImage[];\n  bigImages: string[] | SafeResourceUrl[];\n  descriptions: string[];\n  links: string[];\n  labels: string[];\n\n  oldImages: NgxGalleryImage[];\n  oldImagesLength = 0;\n\n  selectedIndex = 0;\n  previewEnabled: boolean;\n\n  currentOptions: NgxGalleryOptions;\n\n  private breakpoint: number | undefined = undefined;\n  private prevBreakpoint: number | undefined = undefined;\n  private fullWidthTimeout: any;\n\n  @ViewChild(NgxGalleryPreviewComponent) preview: NgxGalleryPreviewComponent;\n  @ViewChild(NgxGalleryImageComponent) image: NgxGalleryImageComponent;\n  @ViewChild(NgxGalleryThumbnailsComponent) thubmnails: NgxGalleryThumbnailsComponent;\n\n  @HostBinding('style.width') width: string;\n  @HostBinding('style.height') height: string;\n  @HostBinding('style.left') left: string;\n\n  constructor(private myElement: ElementRef) {}\n\n  ngOnInit() {\n      this.options = this.options.map((opt) => new NgxGalleryOptions(opt));\n      this.sortOptions();\n      this.setBreakpoint();\n      this.setOptions();\n      this.checkFullWidth();\n      if (this.currentOptions) {\n          this.selectedIndex = <number>this.currentOptions.startIndex;\n      }\n  }\n\n  ngDoCheck(): void {\n      if (this.images !== undefined && (this.images.length !== this.oldImagesLength)\n          || (this.images !== this.oldImages)) {\n          this.oldImagesLength = this.images.length;\n          this.oldImages = this.images;\n          this.setOptions();\n          this.setImages();\n\n          if (this.images && this.images.length) {\n              this.imagesReady.emit();\n          }\n\n          if (this.image) {\n              this.image.reset(<number>this.currentOptions.startIndex);\n          }\n\n          if (this.currentOptions.thumbnailsAutoHide && this.currentOptions.thumbnails\n              && this.images.length <= 1) {\n              this.currentOptions.thumbnails = false;\n              this.currentOptions.imageArrows = false;\n          }\n\n          this.resetThumbnails();\n      }\n  }\n\n  ngAfterViewInit(): void {\n      this.checkFullWidth();\n  }\n\n  @HostListener('window:resize') onResize() {\n      this.setBreakpoint();\n\n      if (this.prevBreakpoint !== this.breakpoint) {\n          this.setOptions();\n          this.resetThumbnails();\n      }\n\n      if (this.currentOptions && this.currentOptions.fullWidth) {\n\n          if (this.fullWidthTimeout) {\n              clearTimeout(this.fullWidthTimeout);\n          }\n\n          this.fullWidthTimeout = setTimeout(() => {\n              this.checkFullWidth();\n          }, 200);\n      }\n  }\n\n  getImageHeight(): string {\n      return (this.currentOptions && this.currentOptions.thumbnails) ?\n          this.currentOptions.imagePercent + '%' : '100%';\n  }\n\n  getThumbnailsHeight(): string {\n      if (this.currentOptions && this.currentOptions.image) {\n          return 'calc(' + this.currentOptions.thumbnailsPercent + '% - '\n          + this.currentOptions.thumbnailsMargin + 'px)';\n      } else {\n          return '100%';\n      }\n  }\n\n  getThumbnailsMarginTop(): string {\n      if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsBottom) {\n          return this.currentOptions.thumbnailsMargin + 'px';\n      } else {\n          return '0px';\n      }\n  }\n\n  getThumbnailsMarginBottom(): string {\n      if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsTop) {\n          return this.currentOptions.thumbnailsMargin + 'px';\n      } else {\n          return '0px';\n      }\n  }\n\n  openPreview(index: number): void {\n      if (this.currentOptions.previewCustom) {\n          this.currentOptions.previewCustom(index);\n      } else {\n          this.previewEnabled = true;\n          this.preview.open(index);\n      }\n  }\n\n  onPreviewOpen(): void {\n      this.previewOpen.emit();\n\n      if (this.image && this.image.autoPlay) {\n          this.image.stopAutoPlay();\n      }\n  }\n\n  onPreviewClose(): void {\n      this.previewEnabled = false;\n      this.previewClose.emit();\n\n      if (this.image && this.image.autoPlay) {\n          this.image.startAutoPlay();\n      }\n  }\n\n  selectFromImage(index: number) {\n      this.select(index);\n  }\n\n  selectFromThumbnails(index: number) {\n      this.select(index);\n\n      if (this.currentOptions && this.currentOptions.thumbnails && this.currentOptions.preview\n          && (!this.currentOptions.image || this.currentOptions.thumbnailsRemainingCount)) {\n          this.openPreview(this.selectedIndex);\n      }\n  }\n\n  show(index: number): void {\n      this.select(index);\n  }\n\n  showNext(): void {\n      this.image.showNext();\n  }\n\n  showPrev(): void {\n      this.image.showPrev();\n  }\n\n  canShowNext(): boolean {\n      if (this.images && this.currentOptions) {\n          return (this.currentOptions.imageInfinityMove || this.selectedIndex < this.images.length - 1)\n              ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  canShowPrev(): boolean {\n      if (this.images && this.currentOptions) {\n          return (this.currentOptions.imageInfinityMove || this.selectedIndex > 0) ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  previewSelect(index: number) {\n      this.previewChange.emit({index, image: this.images[index]});\n  }\n\n  moveThumbnailsRight() {\n      this.thubmnails.moveRight();\n  }\n\n  moveThumbnailsLeft() {\n      this.thubmnails.moveLeft();\n  }\n\n  canMoveThumbnailsRight() {\n      return this.thubmnails.canMoveRight();\n  }\n\n  canMoveThumbnailsLeft() {\n      return this.thubmnails.canMoveLeft();\n  }\n\n  private resetThumbnails() {\n      if (this.thubmnails) {\n          this.thubmnails.reset(<number>this.currentOptions.startIndex);\n      }\n  }\n\n  private select(index: number) {\n      this.selectedIndex = index;\n\n      this.change.emit({\n          index,\n          image: this.images[index]\n      });\n  }\n\n  private checkFullWidth(): void {\n      if (this.currentOptions && this.currentOptions.fullWidth) {\n          this.width = document.body.clientWidth + 'px';\n          this.left = (-(document.body.clientWidth -\n              this.myElement.nativeElement.parentNode.innerWidth) / 2) + 'px';\n      }\n  }\n\n  private setImages(): void {\n      this.smallImages = this.images.map((img) => <string>img.small);\n      this.mediumImages = this.images.map((img, i) => new NgxGalleryOrderedImage({\n          src: img.medium,\n          index: i\n      }));\n      this.bigImages = this.images.map((img) => <string>img.big);\n      this.descriptions = this.images.map((img) => <string>img.description);\n      this.links = this.images.map((img) => <string>img.url);\n      this.labels = this.images.map((img) => <string>img.label);\n  }\n\n  private setBreakpoint(): void {\n      this.prevBreakpoint = this.breakpoint;\n      let breakpoints;\n\n      if (typeof window !== 'undefined') {\n          breakpoints = this.options.filter((opt) => opt.breakpoint >= window.innerWidth)\n              .map((opt) => opt.breakpoint);\n      }\n\n      if (breakpoints && breakpoints.length) {\n          this.breakpoint = breakpoints.pop();\n      } else {\n          this.breakpoint = undefined;\n      }\n  }\n\n  private sortOptions(): void {\n      this.options = [\n          ...this.options.filter((a) => a.breakpoint === undefined),\n          ...this.options\n              .filter((a) => a.breakpoint !== undefined)\n              .sort((a, b) => b.breakpoint - a.breakpoint)\n      ];\n  }\n\n  private setOptions(): void {\n      this.currentOptions = new NgxGalleryOptions({});\n\n      this.options\n          .filter((opt) => opt.breakpoint === undefined || opt.breakpoint >= this.breakpoint)\n          .map((opt) => this.combineOptions(this.currentOptions, opt));\n\n      this.width = <string>this.currentOptions.width;\n      this.height = <string>this.currentOptions.height;\n  }\n\n  private combineOptions(first: NgxGalleryOptions, second: NgxGalleryOptions) {\n      Object.keys(second).map((val) => first[val] = second[val] !== undefined ? second[val] : first[val]);\n  }\n}\n","import { Component, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-action',\n  templateUrl: './ngx-gallery-action.component.html',\n  styleUrls: ['./ngx-gallery-action.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryActionComponent {\n  @Input() icon: string;\n  @Input() disabled = false;\n  @Input() titleText = '';\n\n  @Output() onClick: EventEmitter<Event> = new EventEmitter();\n\n  handleClick(event: Event) {\n      if (!this.disabled) {\n          this.onClick.emit(event);\n      }\n\n      event.stopPropagation();\n      event.preventDefault();\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-arrows',\n  templateUrl: './ngx-gallery-arrows.component.html',\n  styleUrls: ['./ngx-gallery-arrows.component.scss']\n})\nexport class NgxGalleryArrowsComponent{\n  @Input() prevDisabled: boolean;\n  @Input() nextDisabled: boolean;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n\n  @Output() onPrevClick = new EventEmitter();\n  @Output() onNextClick = new EventEmitter();\n\n  handlePrevClick(): void {\n      this.onPrevClick.emit();\n  }\n\n  handleNextClick(): void {\n      this.onNextClick.emit();\n  }\n}\n","import { Component, Input, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-bullets',\n  templateUrl: './ngx-gallery-bullets.component.html',\n  styleUrls: ['./ngx-gallery-bullets.component.scss']\n})\nexport class NgxGalleryBulletsComponent {\n  @Input() count: number;\n  @Input() active: number = 0;\n\n  @Output() onChange = new EventEmitter();\n\n  getBullets(): number[] {\n      return Array(this.count);\n  }\n\n  handleChange(event: Event, index: number): void {\n      this.onChange.emit(index);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxGalleryComponent } from './ngx-gallery.component';\nimport { NgxGalleryPreviewComponent } from './ngx-gallery-preview/ngx-gallery-preview.component';\nimport { NgxGalleryImageComponent } from './ngx-gallery-image/ngx-gallery-image.component';\nimport { NgxGalleryThumbnailsComponent } from './ngx-gallery-thumbnails/ngx-gallery-thumbnails.component';\nimport { NgxGalleryActionComponent } from './ngx-gallery-action/ngx-gallery-action.component';\nimport { NgxGalleryArrowsComponent } from './ngx-gallery-arrows/ngx-gallery-arrows.component';\nimport { NgxGalleryBulletsComponent } from './ngx-gallery-bullets/ngx-gallery-bullets.component';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [\n    NgxGalleryComponent,\n    NgxGalleryPreviewComponent, \n    NgxGalleryImageComponent,\n    NgxGalleryThumbnailsComponent,\n    NgxGalleryActionComponent,\n    NgxGalleryArrowsComponent,\n    NgxGalleryBulletsComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [NgxGalleryComponent]\n})\nexport class NgxGalleryModule { }\n","import { SafeResourceUrl } from '@angular/platform-browser';\r\n\r\nexport interface INgxGalleryImage {\r\n    small?: string | SafeResourceUrl;\r\n    medium?: string | SafeResourceUrl;\r\n    big?: string | SafeResourceUrl;\r\n    description?: string;\r\n    url?: string;\r\n    label?: string;\r\n}\r\n\r\nexport class NgxGalleryImage implements INgxGalleryImage {\r\n    small?: string | SafeResourceUrl;\r\n    medium?: string | SafeResourceUrl;\r\n    big?: string | SafeResourceUrl;\r\n    description?: string;\r\n    url?: string;\r\n    label?: string;\r\n\r\n    constructor(obj: INgxGalleryImage) {\r\n        this.small = obj.small;\r\n        this.medium = obj.medium;\r\n        this.big = obj.big;\r\n        this.description = obj.description;\r\n        this.url = obj.url;\r\n        this.label = obj.label;\r\n    }\r\n}\r\n","/*\n * Public API Surface of ngx-gallery\n */\nexport * from './lib/ngx-gallery.component';\nexport * from './lib/ngx-gallery.module';\nexport * from './lib/ngx-gallery-action/ngx-gallery-action.component';\nexport * from './lib/ngx-gallery-image/ngx-gallery-image.component';\nexport * from './lib/ngx-gallery-thumbnails/ngx-gallery-thumbnails.component';\nexport * from './lib/ngx-gallery-preview/ngx-gallery-preview.component';\nexport * from './lib/ngx-gallery-arrows/ngx-gallery-arrows.component';\nexport * from './lib/ngx-gallery-bullets/ngx-gallery-bullets.component';\nexport * from './lib/ngx-gallery-options';\nexport * from './lib/ngx-gallery-image.model';\nexport * from './lib/ngx-gallery-animation.model';\nexport * from './lib/ngx-gallery-helper.service';\nexport * from './lib/ngx-gallery-image-size.model';\nexport * from './lib/ngx-gallery-layout.model';\nexport * from './lib/ngx-gallery-order.model';\nexport * from './lib/ngx-gallery-ordered-image.model';\nexport * from './lib/ngx-gallery-action.model';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}