import { ChangeDetectionStrategy, Component, Input, HostBinding, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/** @enum {string} */
import * as ɵngcc0 from '@angular/core';

const _c0 = [[["", "before-svg", ""]], "*", [["", "after-svg", ""]]];
const _c1 = ["[before-svg]", "*", "[after-svg]"];
const _c2 = ["ngx-rect", ""];
const _c3 = ["ngx-svg-stop", ""];
const _c4 = ["ngx-facebook-preset", ""];
const _c5 = ["ngx-instagram-preset", ""];
const _c6 = ["ngx-circle", ""];
const _c7 = ["ngx-code-preset", ""];
const _c8 = ["ngx-bullet-list-preset", ""];
const _c9 = ["ngx-list-preset", ""];
const Defaults = {
    PrimaryColor: '#f3f3f3',
    SecondaryColor: '#ecebeb',
    PreserveAspectRatio: 'xMidYMid meet',
    Classes: '',
    Speed: '1000ms',
    Width: '400',
    Height: '130',
    Rx: '0',
    Ry: '1',
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class NgxContentLoadingComponent {
    constructor() {
        this.width = Defaults.Width;
        this.height = Defaults.Height;
        this.primaryColor = Defaults.PrimaryColor;
        this.secondaryColor = Defaults.SecondaryColor;
        this.speed = Defaults.Speed;
        this.preserveAspectRatio = Defaults.PreserveAspectRatio;
    }
    /**
     * @return {?}
     */
    get viewBox() {
        return `0 0 ${this.width} ${this.height}`;
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
}
NgxContentLoadingComponent.ɵfac = function NgxContentLoadingComponent_Factory(t) { return new (t || NgxContentLoadingComponent)(); };
NgxContentLoadingComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxContentLoadingComponent, selectors: [["ngx-content-loading"]], inputs: { width: "width", height: "height", primaryColor: "primaryColor", secondaryColor: "secondaryColor", speed: "speed", preserveAspectRatio: "preserveAspectRatio" }, ngContentSelectors: _c1, decls: 4, vars: 2, consts: [["version", "1.1"]], template: function NgxContentLoadingComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c0);
        ɵngcc0.ɵɵprojection(0);
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelementStart(1, "svg", 0);
        ɵngcc0.ɵɵprojection(2, 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵprojection(3, 2);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵattribute("preserveAspectRatio", ctx.preserveAspectRatio)("viewBox", ctx.viewBox);
    } }, styles: [""], changeDetection: 0 });
/** @nocollapse */
NgxContentLoadingComponent.ctorParameters = () => [];
NgxContentLoadingComponent.propDecorators = {
    "width": [{ type: Input },],
    "height": [{ type: Input },],
    "primaryColor": [{ type: Input },],
    "secondaryColor": [{ type: Input },],
    "speed": [{ type: Input },],
    "preserveAspectRatio": [{ type: Input },],
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxContentLoadingComponent, [{
        type: Component,
        args: [{
                selector: 'ngx-content-loading',
                template: `<ng-content select="[before-svg]"></ng-content>
<svg version="1.1"
    [attr.preserveAspectRatio]="preserveAspectRatio"
    [attr.viewBox]="viewBox">
        <ng-content></ng-content>
</svg>
<ng-content select="[after-svg]"></ng-content>
`,
                styles: [``],
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return []; }, { width: [{
            type: Input
        }], height: [{
            type: Input
        }], primaryColor: [{
            type: Input
        }], secondaryColor: [{
            type: Input
        }], speed: [{
            type: Input
        }], preserveAspectRatio: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class SvgElementComponent {
    /**
     * @param {?} content
     */
    constructor(content) {
        this.content = content;
        this.clipPathId = getId();
        this.linearGradientId = getId();
    }
    /**
     * @return {?}
     */
    get clipPathUrl() {
        return `url(#${this.clipPathId})`;
    }
    /**
     * @return {?}
     */
    get linearGradientUrl() {
        return `url(#${this.linearGradientId})`;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
SvgElementComponent.ɵfac = function SvgElementComponent_Factory(t) { return new (t || SvgElementComponent)(ɵngcc0.ɵɵdirectiveInject(NgxContentLoadingComponent)); };
SvgElementComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SvgElementComponent, selectors: [["ngx-svg-element"]], decls: 0, vars: 0, template: function SvgElementComponent_Template(rf, ctx) { }, styles: [""], changeDetection: 0 });
/** @nocollapse */
SvgElementComponent.ctorParameters = () => [
    { type: NgxContentLoadingComponent, },
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SvgElementComponent, [{
        type: Component,
        args: [{
                selector: 'ngx-svg-element',
                template: ``,
                styles: [``],
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: NgxContentLoadingComponent }]; }, null); })();
/**
 * @return {?}
 */
function getId() {
    const /** @type {?} */ id = performance.now() * Math.random();
    return id.toString();
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class RectComponent extends SvgElementComponent {
    /**
     * @param {?} content
     */
    constructor(content) {
        super(content);
        this.content = content;
        this.rx = Defaults.Rx;
        this.ry = Defaults.Ry;
    }
}
RectComponent.ɵfac = function RectComponent_Factory(t) { return new (t || RectComponent)(ɵngcc0.ɵɵdirectiveInject(NgxContentLoadingComponent)); };
RectComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: RectComponent, selectors: [["", "ngx-rect", ""]], inputs: { rx: "rx", ry: "ry", y: "y", x: "x", width: "width", height: "height", primaryColor: "primaryColor", secondaryColor: "secondaryColor", speed: "speed" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c2, decls: 7, vars: 22, consts: [["ngx-svg-stop", "", 3, "offset", "values", "speed", "color"]], template: function RectComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "rect");
        ɵngcc0.ɵɵelementStart(1, "defs");
        ɵngcc0.ɵɵelement(2, "clipPath");
        ɵngcc0.ɵɵelementStart(3, "linearGradient");
        ɵngcc0.ɵɵelement(4, "stop", 0);
        ɵngcc0.ɵɵelement(5, "stop", 0);
        ɵngcc0.ɵɵelement(6, "stop", 0);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵattribute("x", ctx.x)("y", ctx.y)("rx", ctx.rx)("ry", ctx.ry)("width", ctx.width)("fill", ctx.linearGradientUrl)("clipPath", ctx.clipPathUrl)("height", ctx.height);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵattribute("id", ctx.clipPathId);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵattribute("id", ctx.linearGradientId);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("offset", "0%")("values", "-2; 1")("speed", ctx.content.speed)("color", ctx.content.primaryColor);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("offset", "50%")("values", "-1.5; 1.5")("speed", ctx.content.speed)("color", ctx.content.secondaryColor);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("offset", "100%")("values", "-1; 2")("speed", ctx.content.speed)("color", ctx.content.primaryColor);
    } }, directives: function () { return [SvgStopComponent]; }, styles: [""] });
/** @nocollapse */
RectComponent.ctorParameters = () => [
    { type: NgxContentLoadingComponent, },
];
RectComponent.propDecorators = {
    "y": [{ type: Input },],
    "x": [{ type: Input },],
    "rx": [{ type: Input },],
    "ry": [{ type: Input },],
    "width": [{ type: Input },],
    "height": [{ type: Input },],
    "primaryColor": [{ type: Input },],
    "secondaryColor": [{ type: Input },],
    "speed": [{ type: Input },],
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RectComponent, [{
        type: Component,
        args: [{
                selector: '[ngx-rect]',
                template: `<svg:rect
        [attr.x]="x"
        [attr.y]="y"
        [attr.rx]="rx"
        [attr.ry]="ry"
        [attr.width]="width"
        [attr.fill]="linearGradientUrl"
        [attr.clipPath]="clipPathUrl"
        [attr.height]="height">
</svg:rect>
<svg:defs>
    <svg:clipPath [attr.id]="clipPathId"></svg:clipPath>
    <svg:linearGradient [attr.id]="linearGradientId">
        <svg:stop ngx-svg-stop
            [offset]="'0%'"
            [values]="'-2; 1'"
            [speed]="content.speed"
            [color]="content.primaryColor">
        </svg:stop>
        <svg:stop ngx-svg-stop
            [offset]="'50%'"
            [values]="'-1.5; 1.5'"
            [speed]="content.speed"
            [color]="content.secondaryColor">
        </svg:stop>
        <svg:stop ngx-svg-stop
            [offset]="'100%'"
            [values]="'-1; 2'"
            [speed]="content.speed"
            [color]="content.primaryColor">
        </svg:stop>
    </svg:linearGradient>
</svg:defs>
`,
                styles: [``]
            }]
    }], function () { return [{ type: NgxContentLoadingComponent }]; }, { rx: [{
            type: Input
        }], ry: [{
            type: Input
        }], y: [{
            type: Input
        }], x: [{
            type: Input
        }], width: [{
            type: Input
        }], height: [{
            type: Input
        }], primaryColor: [{
            type: Input
        }], secondaryColor: [{
            type: Input
        }], speed: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class SvgStopComponent {
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
SvgStopComponent.ɵfac = function SvgStopComponent_Factory(t) { return new (t || SvgStopComponent)(); };
SvgStopComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SvgStopComponent, selectors: [["", "ngx-svg-stop", ""]], hostVars: 2, hostBindings: function SvgStopComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("offset", ctx.offset)("stop-color", ctx.color);
    } }, inputs: { speed: "speed", values: "values", offset: "offset", color: "color" }, attrs: _c3, decls: 1, vars: 2, consts: [["attributeName", "offset", "repeatCount", "indefinite"]], template: function SvgStopComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "animate", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵattribute("values", ctx.values)("dur", ctx.speed);
    } }, styles: [""], changeDetection: 0 });
/** @nocollapse */
SvgStopComponent.ctorParameters = () => [];
SvgStopComponent.propDecorators = {
    "speed": [{ type: Input },],
    "values": [{ type: Input },],
    "offset": [{ type: HostBinding, args: ['attr.offset',] }, { type: Input },],
    "color": [{ type: HostBinding, args: ['attr.stop-color',] }, { type: Input },],
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SvgStopComponent, [{
        type: Component,
        args: [{
                selector: '[ngx-svg-stop]',
                template: `<svg:animate
    attributeName="offset"
    [attr.values]="values"
    [attr.dur]="speed"
    repeatCount="indefinite"
/>
`,
                styles: [``],
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], null, { speed: [{
            type: Input
        }], values: [{
            type: Input
        }], offset: [{
            type: HostBinding,
            args: ['attr.offset']
        }, {
            type: Input
        }], color: [{
            type: HostBinding,
            args: ['attr.stop-color']
        }, {
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class FacebookPresetComponent {
    constructor() { }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
FacebookPresetComponent.ɵfac = function FacebookPresetComponent_Factory(t) { return new (t || FacebookPresetComponent)(); };
FacebookPresetComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FacebookPresetComponent, selectors: [["", "ngx-facebook-preset", ""]], attrs: _c4, decls: 6, vars: 0, consts: [["ngx-circle", "", "cx", "25", "cy", "25", "r", "25"], ["ngx-rect", "", "width", "100", "height", "5", "y", "15", "x", "60", "rx", "5", "ry", "5"], ["ngx-rect", "", "width", "60", "height", "5", "y", "30", "x", "60", "rx", "5", "ry", "5"], ["ngx-rect", "", "width", "170", "height", "5", "y", "65", "x", "0", "rx", "5", "ry", "5"], ["ngx-rect", "", "width", "220", "height", "5", "y", "80", "x", "0", "rx", "5", "ry", "5"], ["ngx-rect", "", "width", "130", "height", "5", "y", "95", "x", "0", "rx", "5", "ry", "5"]], template: function FacebookPresetComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "g", 0);
        ɵngcc0.ɵɵelement(1, "g", 1);
        ɵngcc0.ɵɵelement(2, "g", 2);
        ɵngcc0.ɵɵelement(3, "g", 3);
        ɵngcc0.ɵɵelement(4, "g", 4);
        ɵngcc0.ɵɵelement(5, "g", 5);
    } }, directives: function () { return [CircleComponent, RectComponent]; }, styles: [""], changeDetection: 0 });
/** @nocollapse */
FacebookPresetComponent.ctorParameters = () => [];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FacebookPresetComponent, [{
        type: Component,
        args: [{
                selector: '[ngx-facebook-preset]',
                template: `<svg:g ngx-circle cx="25" cy="25" r="25"></svg:g>
<svg:g ngx-rect width="100" height="5" y="15" x="60" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="60" height="5" y="30" x="60" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="170" height="5" y="65" x="0" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="220" height="5" y="80" x="0" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="130" height="5" y="95" x="0" rx="5" ry="5"></svg:g>
`,
                styles: [``],
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return []; }, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class InstagramPresetComponent {
    constructor() { }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
InstagramPresetComponent.ɵfac = function InstagramPresetComponent_Factory(t) { return new (t || InstagramPresetComponent)(); };
InstagramPresetComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: InstagramPresetComponent, selectors: [["", "ngx-instagram-preset", ""]], attrs: _c5, decls: 4, vars: 0, consts: [["ngx-circle", "", "cx", "25", "cy", "25", "r", "25"], ["ngx-rect", "", "width", "120", "height", "10", "y", "10", "x", "60", "rx", "5", "ry", "5"], ["ngx-rect", "", "width", "40", "height", "5", "y", "30", "x", "60", "rx", "5", "ry", "5"], ["ngx-rect", "", "width", "250", "height", "250", "y", "60", "x", "0", "rx", "5", "ry", "5"]], template: function InstagramPresetComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "g", 0);
        ɵngcc0.ɵɵelement(1, "g", 1);
        ɵngcc0.ɵɵelement(2, "g", 2);
        ɵngcc0.ɵɵelement(3, "g", 3);
    } }, directives: function () { return [CircleComponent, RectComponent]; }, styles: [""], changeDetection: 0 });
/** @nocollapse */
InstagramPresetComponent.ctorParameters = () => [];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InstagramPresetComponent, [{
        type: Component,
        args: [{
                selector: '[ngx-instagram-preset]',
                template: `<svg:g ngx-circle cx="25" cy="25" r="25"></svg:g>
<svg:g ngx-rect width="120" height="10" y="10" x="60" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="40" height="5" y="30" x="60" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="250" height="250" y="60" x="0" rx="5" ry="5"></svg:g>
`,
                styles: [``],
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return []; }, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class CircleComponent extends SvgElementComponent {
    /**
     * @param {?} content
     */
    constructor(content) {
        super(content);
        this.content = content;
    }
}
CircleComponent.ɵfac = function CircleComponent_Factory(t) { return new (t || CircleComponent)(ɵngcc0.ɵɵdirectiveInject(NgxContentLoadingComponent)); };
CircleComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CircleComponent, selectors: [["", "ngx-circle", ""]], inputs: { r: "r", cx: "cx", cy: "cy" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c6, decls: 7, vars: 19, consts: [["ngx-svg-stop", "", 3, "offset", "values", "speed", "color"]], template: function CircleComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "circle");
        ɵngcc0.ɵɵelementStart(1, "defs");
        ɵngcc0.ɵɵelement(2, "clipPath");
        ɵngcc0.ɵɵelementStart(3, "linearGradient");
        ɵngcc0.ɵɵelement(4, "stop", 0);
        ɵngcc0.ɵɵelement(5, "stop", 0);
        ɵngcc0.ɵɵelement(6, "stop", 0);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵattribute("cx", ctx.cx)("cy", ctx.cy)("r", ctx.r)("fill", ctx.linearGradientUrl)("clipPath", ctx.clipPathUrl);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵattribute("id", ctx.clipPathId);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵattribute("id", ctx.linearGradientId);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("offset", "0%")("values", "-2; 1")("speed", ctx.content.speed)("color", ctx.content.primaryColor);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("offset", "50%")("values", "-1.5; 1.5")("speed", ctx.content.speed)("color", ctx.content.secondaryColor);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("offset", "100%")("values", "-1; 2")("speed", ctx.content.speed)("color", ctx.content.primaryColor);
    } }, directives: [SvgStopComponent], styles: [""] });
/** @nocollapse */
CircleComponent.ctorParameters = () => [
    { type: NgxContentLoadingComponent, },
];
CircleComponent.propDecorators = {
    "r": [{ type: Input },],
    "cx": [{ type: Input },],
    "cy": [{ type: Input },],
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CircleComponent, [{
        type: Component,
        args: [{
                selector: '[ngx-circle]',
                template: `<svg:circle
        [attr.cx]="cx"
        [attr.cy]="cy"
        [attr.r]="r"
        [attr.fill]="linearGradientUrl"
        [attr.clipPath]="clipPathUrl">
</svg:circle>
<svg:defs>
    <svg:clipPath [attr.id]="clipPathId"></svg:clipPath>
    <svg:linearGradient [attr.id]="linearGradientId">
        <svg:stop ngx-svg-stop
            [offset]="'0%'"
            [values]="'-2; 1'"
            [speed]="content.speed"
            [color]="content.primaryColor">
        </svg:stop>
        <svg:stop ngx-svg-stop
            [offset]="'50%'"
            [values]="'-1.5; 1.5'"
            [speed]="content.speed"
            [color]="content.secondaryColor">
        </svg:stop>
        <svg:stop ngx-svg-stop
            [offset]="'100%'"
            [values]="'-1; 2'"
            [speed]="content.speed"
            [color]="content.primaryColor">
        </svg:stop>
    </svg:linearGradient>
</svg:defs>
`,
                styles: [``]
            }]
    }], function () { return [{ type: NgxContentLoadingComponent }]; }, { r: [{
            type: Input
        }], cx: [{
            type: Input
        }], cy: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class CodePresetComponent {
    constructor() { }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
CodePresetComponent.ɵfac = function CodePresetComponent_Factory(t) { return new (t || CodePresetComponent)(); };
CodePresetComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CodePresetComponent, selectors: [["", "ngx-code-preset", ""]], attrs: _c7, decls: 9, vars: 0, consts: [["ngx-rect", "", "width", "60", "height", "10", "y", "15", "x", "0", "rx", "5", "ry", "5"], ["ngx-rect", "", "width", "90", "height", "10", "y", "15", "x", "70", "rx", "5", "ry", "5"], ["ngx-rect", "", "width", "20", "height", "10", "y", "15", "x", "170", "rx", "5", "ry", "5"], ["ngx-rect", "", "width", "100", "height", "10", "y", "35", "x", "9", "rx", "5", "ry", "5"], ["ngx-rect", "", "width", "120", "height", "10", "y", "35", "x", "120", "rx", "5", "ry", "5"], ["ngx-rect", "", "width", "90", "height", "10", "y", "55", "x", "5", "rx", "5", "ry", "5"], ["ngx-rect", "", "width", "90", "height", "10", "y", "55", "x", "105", "rx", "5", "ry", "5"], ["ngx-rect", "", "width", "70", "height", "10", "y", "55", "x", "205", "rx", "5", "ry", "5"], ["ngx-rect", "", "width", "30", "height", "10", "y", "75", "x", "0", "rx", "5", "ry", "5"]], template: function CodePresetComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "g", 0);
        ɵngcc0.ɵɵelement(1, "g", 1);
        ɵngcc0.ɵɵelement(2, "g", 2);
        ɵngcc0.ɵɵelement(3, "g", 3);
        ɵngcc0.ɵɵelement(4, "g", 4);
        ɵngcc0.ɵɵelement(5, "g", 5);
        ɵngcc0.ɵɵelement(6, "g", 6);
        ɵngcc0.ɵɵelement(7, "g", 7);
        ɵngcc0.ɵɵelement(8, "g", 8);
    } }, directives: [RectComponent], encapsulation: 2, changeDetection: 0 });
/** @nocollapse */
CodePresetComponent.ctorParameters = () => [];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CodePresetComponent, [{
        type: Component,
        args: [{
                selector: '[ngx-code-preset]',
                template: `<svg:g ngx-rect width="60" height="10" y="15" x="0" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="90" height="10" y="15" x="70" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="20" height="10" y="15" x="170" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="100" height="10" y="35" x="9" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="120" height="10" y="35" x="120" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="90" height="10" y="55" x="5" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="90" height="10" y="55" x="105" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="70" height="10" y="55" x="205" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="30" height="10" y="75" x="0" rx="5" ry="5"></svg:g>
`,
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return []; }, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class BulletListPresetComponent {
    constructor() { }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
BulletListPresetComponent.ɵfac = function BulletListPresetComponent_Factory(t) { return new (t || BulletListPresetComponent)(); };
BulletListPresetComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BulletListPresetComponent, selectors: [["", "ngx-bullet-list-preset", ""]], attrs: _c8, decls: 8, vars: 0, consts: [["ngx-circle", "", "cx", "7", "cy", "7", "r", "7"], ["ngx-circle", "", "cx", "7", "cy", "37", "r", "7"], ["ngx-circle", "", "cx", "7", "cy", "67", "r", "7"], ["ngx-circle", "", "cx", "7", "cy", "97", "r", "7"], ["ngx-rect", "", "width", "200", "height", "12", "y", "2", "x", "20", "rx", "5", "ry", "5"], ["ngx-rect", "", "width", "200", "height", "12", "y", "32", "x", "20", "rx", "5", "ry", "5"], ["ngx-rect", "", "width", "200", "height", "12", "y", "62", "x", "20", "rx", "5", "ry", "5"], ["ngx-rect", "", "width", "200", "height", "12", "y", "92", "x", "20", "rx", "5", "ry", "5"]], template: function BulletListPresetComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "g", 0);
        ɵngcc0.ɵɵelement(1, "g", 1);
        ɵngcc0.ɵɵelement(2, "g", 2);
        ɵngcc0.ɵɵelement(3, "g", 3);
        ɵngcc0.ɵɵelement(4, "g", 4);
        ɵngcc0.ɵɵelement(5, "g", 5);
        ɵngcc0.ɵɵelement(6, "g", 6);
        ɵngcc0.ɵɵelement(7, "g", 7);
    } }, directives: [CircleComponent, RectComponent], encapsulation: 2, changeDetection: 0 });
/** @nocollapse */
BulletListPresetComponent.ctorParameters = () => [];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BulletListPresetComponent, [{
        type: Component,
        args: [{
                selector: '[ngx-bullet-list-preset]',
                template: `<svg:g ngx-circle cx="7" cy="7" r="7"></svg:g>
<svg:g ngx-circle cx="7" cy="37" r="7"></svg:g>
<svg:g ngx-circle cx="7" cy="67" r="7"></svg:g>
<svg:g ngx-circle cx="7" cy="97" r="7"></svg:g>
<svg:g ngx-rect width="200" height="12" y="2" x="20" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="200" height="12" y="32" x="20" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="200" height="12" y="62" x="20" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="200" height="12" y="92" x="20" rx="5" ry="5"></svg:g>
`,
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return []; }, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class ListPresetComponent {
    constructor() { }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
ListPresetComponent.ɵfac = function ListPresetComponent_Factory(t) { return new (t || ListPresetComponent)(); };
ListPresetComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ListPresetComponent, selectors: [["", "ngx-list-preset", ""]], attrs: _c9, decls: 6, vars: 0, consts: [["ngx-rect", "", "width", "200", "height", "10", "y", "0", "x", "0", "rx", "5", "ry", "5"], ["ngx-rect", "", "width", "180", "height", "10", "y", "20", "x", "20", "rx", "5", "ry", "5"], ["ngx-rect", "", "width", "160", "height", "10", "y", "40", "x", "20", "rx", "5", "ry", "5"], ["ngx-rect", "", "width", "200", "height", "10", "y", "60", "x", "0", "rx", "5", "ry", "5"], ["ngx-rect", "", "width", "180", "height", "10", "y", "80", "x", "20", "rx", "5", "ry", "5"], ["ngx-rect", "", "width", "60", "height", "10", "y", "100", "x", "20", "rx", "5", "ry", "5"]], template: function ListPresetComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "g", 0);
        ɵngcc0.ɵɵelement(1, "g", 1);
        ɵngcc0.ɵɵelement(2, "g", 2);
        ɵngcc0.ɵɵelement(3, "g", 3);
        ɵngcc0.ɵɵelement(4, "g", 4);
        ɵngcc0.ɵɵelement(5, "g", 5);
    } }, directives: [RectComponent], encapsulation: 2, changeDetection: 0 });
/** @nocollapse */
ListPresetComponent.ctorParameters = () => [];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ListPresetComponent, [{
        type: Component,
        args: [{
                selector: '[ngx-list-preset]',
                template: `<svg:g ngx-rect width="200" height="10" y="0" x="0" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="180" height="10" y="20" x="20" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="160" height="10" y="40" x="20" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="200" height="10" y="60" x="0" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="180" height="10" y="80" x="20" rx="5" ry="5"></svg:g>
<svg:g ngx-rect width="60" height="10" y="100" x="20" rx="5" ry="5"></svg:g>
`,
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return []; }, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class NgxContentLoadingModule {
}
NgxContentLoadingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxContentLoadingModule });
NgxContentLoadingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxContentLoadingModule_Factory(t) { return new (t || NgxContentLoadingModule)(); }, imports: [[
            CommonModule
        ]] });
/** @nocollapse */
NgxContentLoadingModule.ctorParameters = () => [];
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxContentLoadingModule, { declarations: function () { return [NgxContentLoadingComponent, RectComponent, CircleComponent, SvgElementComponent, SvgStopComponent, FacebookPresetComponent, InstagramPresetComponent, CodePresetComponent, BulletListPresetComponent, ListPresetComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgxContentLoadingComponent, RectComponent, CircleComponent, FacebookPresetComponent, InstagramPresetComponent, CodePresetComponent, BulletListPresetComponent, ListPresetComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxContentLoadingModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule
                ],
                declarations: [
                    NgxContentLoadingComponent,
                    RectComponent,
                    CircleComponent,
                    SvgElementComponent,
                    SvgStopComponent,
                    FacebookPresetComponent,
                    InstagramPresetComponent,
                    CodePresetComponent,
                    BulletListPresetComponent,
                    ListPresetComponent
                ],
                exports: [
                    NgxContentLoadingComponent,
                    RectComponent,
                    CircleComponent,
                    FacebookPresetComponent,
                    InstagramPresetComponent,
                    CodePresetComponent,
                    BulletListPresetComponent,
                    ListPresetComponent
                ]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */

export { NgxContentLoadingModule, BulletListPresetComponent as ɵi, CircleComponent as ɵd, CodePresetComponent as ɵh, FacebookPresetComponent as ɵf, InstagramPresetComponent as ɵg, ListPresetComponent as ɵj, NgxContentLoadingComponent as ɵa, RectComponent as ɵb, SvgElementComponent as ɵc, SvgStopComponent as ɵe };

//# sourceMappingURL=ngx-content-loading.js.map